apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin-credentials
type: Opaque
stringData:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "grafana-admin-credentials") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $admin-user := (get $secretData "admin-user") | default (randAlphaNum 6 | b64enc) }}
  {{- $admin-password := (get $secretData "admin-password") | default (randAlphaNum 32 | b64enc) }}
  admin-user: {{ $admin-user | quote }}
  admin-password: {{ $admin-password | quote }}
