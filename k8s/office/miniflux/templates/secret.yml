apiVersion: v1
kind: Secret
metadata:
  name: "miniflux-db-creds"
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "miniflux-db-creds") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $username := (get $secretData "username") | default (randAlphaNum 6 | b64enc) }}
  {{- $password := (get $secretData "password") | default (randAlphaNum 32 | b64enc) }}
  {{- $database := (get $secretData "database") | default (randAlphaNum 8 | b64enc) }}
  username: {{ $username | quote }}
  password: {{ $password | quote }}
  database: {{ $database | quote }}
  url: "postgres://{{ $username }}:{{ $password }}@127.0.0.1:5432/{{ $database }}?sslmode=disable"
