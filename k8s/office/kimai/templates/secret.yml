---
apiVersion: v1
kind: Secret
metadata:
  name: kimai-db-credentials
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "office") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $MYSQL_USER := (get $secretData "MYSQL_USER") | default (randAlphaNum 6 | b64enc) }}
  MYSQL_USER: {{ $MYSQL_USER | quote }}
  {{- $MYSQL_PASSWORD := (get $secretData "MYSQL_PASSWORD") | default (randAlphaNum 32 | b64enc) }}
  MYSQL_PASSWORD: {{ $MYSQL_PASSWORD | quote }}
  {{- $MYSQL_ROOT_PASSWORD := (get $secretData "MYSQL_ROOT_PASSWORD") | default (randAlphaNum 32 | b64enc) }}
  MYSQL_ROOT_PASSWORD: {{ $MYSQL_ROOT_PASSWORD | quote }}
  {{- $MYSQL_DATABASE := (get $secretData "MYSQL_DATABASE") | default (randAlphaNum 12 | b64enc) }}
  MYSQL_DATABASE: {{ $MYSQL_DATABASE | quote }}
  {{- $MYSQL_CONN_URI := ( print "mysql://" ($MYSQL_USER | b64dec) ":" ($MYSQL_PASSWORD | b64dec) "@127.0.0.1:3306/" ($MYSQL_DATABASE | b64dec) | b64enc) }}
  MYSQL_CONN_URI: {{ $MYSQL_CONN_URI | quote }}
