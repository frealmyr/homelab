- hosts: homelab
  become: true
  vars:
    service_name: victoriametrics
    domain: victoriametrics.fmlab.no
    image: victoriametrics/victoria-metrics:stable
  tasks:

###########
## Users ##
###########

    - name: "{{ service_name }} - create non-root user"
      user:
        name: "{{ service_name }}"
        create_home: false
        shell: /usr/sbin/nologin
        state: present
      register: user

##################
## Config Files ##
##################

    - name: "{{ service_name }} - create config sub-directory"
      file:
        path: "/var/lib/homelab/configs/{{ service_name }}"
        state: directory
        owner: "{{ user.uid }}"
        group: "{{ user.group }}"
        mode: 0700

    - name: "{{ service_name }} - copy local config folder to remote target"
      copy:
        src: "config/"
        dest: "/var/lib/homelab/configs/{{ service_name }}/"
        owner: "{{ user.uid }}"
        group: "{{ user.group }}"
        mode: "0700"
        directory_mode: "0700"
        force: true

###################
## Data & Backup ##
###################

    - name: "{{ service_name }} - create docker volumes"
      community.docker.docker_volume:
        volume_name: "{{ service_name }}_{{ item }}"
        state: present
      loop:
        - data

    - name: "{{ service_name }} - set folder permission on volumes"
      file:
        path: "/var/lib/docker/volumes/{{ service_name }}_{{ item }}/_data"
        state: directory
        owner: "{{ user.uid }}"
        group: root
      loop:
        - data

    - name: "{{ service_name }} - create backup sub-directory"
      file:
        path: "/var/lib/homelab/backups/{{ service_name }}"
        state: directory
        owner: backup
        group: backup
        mode: "0770"

    - name: "{{ service_name }} - create weekly dump-volume-to-backup-folder job"
      ansible.builtin.cron:
        name: "docker-volume-backup-{{ item.volume }}"
        minute: "0"
        hour: "3" # 03:00
        weekday: "0" # Sunday
        job: "/var/lib/homelab/scripts/backup-docker-volume.sh {{ item.container }} {{ service_name }} {{ item.volume }}"
      with_items:
        - { container: "{{ service_name }}", volume: "{{ service_name }}_data" }

###################
## Reverse Proxy ##
###################

    - name: "{{ service_name }} - configure traefik labels"
      set_fact:
        traefik_labels_victoriametrics: "{{ traefik_labels_victoriametrics | default({}) | combine ({ item.key : item.value }) }}"
      with_items:
        - { 'key': 'traefik.enable' , 'value': 'true'}
        - { 'key': 'traefik.http.routers.{{ service_name }}.entryPoints' , 'value': 'https'}
        - { 'key': 'traefik.http.routers.{{ service_name }}.rule' , 'value': 'Host(`{{ domain }}`)'}
        - { 'key': 'traefik.http.routers.{{ service_name }}.service' , 'value': '{{ service_name }}'}
        - { 'key': 'traefik.http.routers.{{ service_name }}.tls.certresolver' , 'value': 'letsEncrypt'}
        - { 'key': 'traefik.http.services.{{ service_name }}.loadbalancer.server.port' , 'value': '8428'}

#######################
## Docker Containers ##
#######################

    - name: "{{ service_name }} - remove containers"
      community.docker.docker_container:
        name: "{{ service_name }}"
        state: absent

    - name: "{{ service_name }} - pull latest image"
      community.docker.docker_image:
        name: "{{ image }}"
        source: pull

    - name: "{{ service_name }} - start docker container"
      community.docker.docker_container:
        name: "{{ service_name }}"
        image: "{{ image }}"
        command: -promscrape.config /etc/victoria-metrics/promscrape.yml
        volumes:
          - "{{ service_name }}_data:/victoria-metrics-data"
          - "/var/lib/homelab/configs/{{ service_name }}/promscrape.yml:/etc/victoria-metrics/promscrape.yml:ro"
        networks:
          - name: reverse-proxy
        security_opts:
          - no-new-privileges:true
        labels: "{{ traefik_labels_victoriametrics }}"
        restart_policy: unless-stopped
