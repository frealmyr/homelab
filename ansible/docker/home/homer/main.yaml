- hosts: homelab
  become: true
  vars:
    service_name: homer
    domain: fmlab.no
  tasks:

###########
## Users ##
###########

    - name: "{{ service_name }} - create non-root user"
      user:
        name: "{{ service_name }}"
        create_home: false
        shell: /usr/sbin/nologin
        state: present
      register: user

##################
## Config Files ##
##################

    - name: "{{ service_name }} - config sub-directory"
      file:
        path: "/var/lib/homelab/configs/{{ service_name }}"
        state: directory
        owner: "{{ user.uid }}"
        group: "{{ user.group }}"
        mode: 0700

    - name: traefik - copy local config folder to remote target
      copy:
        src: "config/"
        dest: "/var/lib/homelab/configs/{{ service_name }}"
        owner: "{{ user.uid }}"
        group: "{{ user.group }}"
        mode: "0700"
        directory_mode: "0700"
        force: true

###################
## Reverse Proxy ##
###################

    - name: "{{ service_name }} - configure traefik labels"
      set_fact:
          traefik_labels_homer: "{{ traefik_labels_homer | default({}) | combine ({ item.key : item.value }) }}"
      with_items:
        - { 'key': 'traefik.enable' , 'value': 'true'}
        - { 'key': 'traefik.http.routers.{{ service_name }}.entryPoints' , 'value': 'https'}
        - { 'key': 'traefik.http.routers.{{ service_name }}.rule' , 'value': 'Host(`home.{{ domain }}`)'} # !! Overridden
        - { 'key': 'traefik.http.routers.{{ service_name }}.service' , 'value': '{{ service_name }}'}
        - { 'key': 'traefik.http.routers.{{ service_name }}.tls.certresolver' , 'value': 'letsEncrypt'}
        - { 'key': 'traefik.http.services.{{ service_name }}.loadbalancer.server.port' , 'value': '8080'}
        - { 'key': 'traefik.http.routers.{{ service_name }}.middlewares' , 'value': 'security@file'}

#######################
## Docker Containers ##
#######################

    - name: "{{ service_name }} - pull latest image"
      community.docker.docker_image:
        name: b4bz/homer:latest
        source: pull

    - name: "{{ service_name }} - remove containers"
      community.docker.docker_container:
        name: "{{ service_name }}"
        state: absent

    - name: "{{ service_name }} - start docker proxy container"
      community.docker.docker_container:
        name: "{{ service_name }}"
        image: b4bz/homer:latest
        user: "{{ user.uid }}:{{ user.group }}"
        env:
          INIT_ASSETS: "0"
        volumes:
          - "/var/lib/homelab/configs/{{ service_name }}:/www/assets:ro"
        read_only: true
        networks:
          - name: reverse-proxy
        security_opts:
          - no-new-privileges:true
        labels: "{{ traefik_labels_homer }}"
        restart_policy: unless-stopped
