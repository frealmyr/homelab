---
- hosts: k3s_controller, k3s_workers
  become: true
  vars:
    local_user: fredrick
    interface:
      mgmt: 10.8.0.50

  tasks:
    - name: k3s - fetch kubeconfig
      command: cat /etc/rancher/k3s/k3s.yaml
      register: kubeconfig
      when: "'k3s_controller' in group_names"

    - name: gcpsm - nuke existing kubectl secret(s)
      shell: |
        secret_versions=$(gcloud secrets versions list homelab-kubeconfig --filter enabled --format value\(name\))
        for version in $secret_versions
        do
          gcloud secrets versions destroy $version --secret=homelab-kubeconfig --quiet
        done
      delegate_to: localhost
      become_user: "{{ local_user }}"
      when: "'k3s_controller' in group_names"
      register: gcpsm_nuke_kubectl_output

    - name: gcpsm - set nuke fact
      set_fact:
        gcpsm_nuke_kubectl: "{{ gcpsm_nuke_kubectl_output.stderr }}" # blame gcloud, they output to stderr on success
      when: "'k3s_controller' in group_names"

    - name: gcpsm - debug message nuke result
      debug:
        msg: "{{ hostvars['k3s-controller-0']['gcpsm_nuke_kubectl'] }}"
      when: "'k3s_controller' in group_names"

    - name: gcpsm - upload kubectl content to new secret version
      shell: echo {{ kubeconfig.stdout | quote }} | sed "s/127.0.0.1/{{ interface.mgmt }}/g" | gcloud secrets versions add --data-file=- homelab-kubeconfig
      delegate_to: localhost
      become_user: "{{ local_user }}"
      when: "'k3s_controller' in group_names"
      register: gcpsm_upload_kubectl_output

    - name: gcpsm - set upload result fact
      set_fact:
        gcpsm_upload_kubectl: "{{ gcpsm_upload_kubectl_output.stderr }}" # blame gcloud, they output to stderr on success
      when: "'k3s_controller' in group_names"

    - name: gcpsm - debug message upload result
      debug:
        msg: "{{ hostvars['k3s-controller-0']['gcpsm_upload_kubectl'] }}"
      when: "'k3s_controller' in group_names"
