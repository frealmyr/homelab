---
- hosts: k8s_controller
  become: true

  vars:
    subnet_pod: 10.244.0.0/16

  tasks:
    #####################
    ## Destroy cluster ##
    #####################

    - name: kublet - kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: kubeadm - reset Kubernetes cluster
      command: kubeadm reset -f

    - name: kubeadm - remove cni folder
      file:
        path: /etc/cni/net.d
        state: absent

    ####################
    ## Create cluster ##
    ####################

    # allowedUnsafeSysctls is used for wg-easy
    - name: kubectl - copy KubeletConfiguration.yaml
      copy:
        dest: /etc/kubernetes/kube-init-config.yaml
        content: "{{ content }}"
      vars:
        content: |
          ---
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: InitConfiguration
          nodeRegistration:
            name: "{{ ansible_hostname }}"
            criSocket: "unix:///var/run/crio/crio.sock"
            imagePullPolicy: IfNotPresent
            taints: []
          localAPIEndpoint:
            advertiseAddress: "{{ ansible_ssh_host }}"
            bindPort: 6443
          ---
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          cgroupDriver: systemd
          systemReserved:
            cpu: '500m'
            memory: '1Gi'
            ephemeral-storage: '1Gi'
          kubeReserved:
            cpu: '1'
            memory: '2Gi'
            ephemeral-storage: '1Gi'
          evictionHard:
            memory.available: '500Mi'
            nodefs.available: '10%'
          allowedUnsafeSysctls:
            - 'net.ipv4.ip_forward'
            - 'net.ipv4.conf.all.src_valid_mark'
          featureGates:
            DevicePlugins: true
          resolvConf: '/run/systemd/resolve/resolv.conf'
          ---
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: ClusterConfiguration
          clusterName: "homelab"
          networking:
            podSubnet: "{{ subnet_pod }}"
            dnsDomain: cluster.local
          controlPlaneEndpoint: "{{ ansible_ssh_host }}:6443"
          apiServer:
            extraArgs:
              service-node-port-range: 1-65535
            timeoutForControlPlane: 5m0s
          ---
          apiVersion: kubeproxy.config.k8s.io/v1alpha1
          kind: KubeProxyConfiguration
          mode: iptables

    - name: kubeadm - pull images
      command: kubeadm config images pull -v 5

    - name: kubeadm - initialize the Kubernetes cluster
      command: kubeadm init --config /etc/kubernetes/kube-init-config.yaml

    - name: ansible - sleep for 45 seconds (wait for cluster startup)
      wait_for:
        timeout: 45
