---
- hosts: k8s
  become: true
  tasks:

##############
## Hostname ##
##############

    - name: hostname - change if mismatch from inventory name
      hostname: name="{{ inventory_hostname }}"
      when: ansible_fqdn != ansible_ssh_host
      register: hostname

    - name: hostname - fix /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: "127.0.1.1 {{ ansible_hostname }}"
        state: present

    - name: system - reboot (hostname changed)
      reboot:
      when: hostname.changed

    - name: hostname - validate ansible_fqdn == inventory_hostname
      tags:
        - validate
      assert:
        that: ansible_fqdn == inventory_hostname

##################
## Disable Snap ##
##################

    - name: Disable snapd services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - snapd.service
        - snapd.socket
        - snapd.seeded.service

    - name: Mask snapd service
      systemd:
        name: snapd.service
        state: stopped
        masked: true

##########
## Swap ##
##########

    # Kubernetes requires swap to be disabled
    # removing swap also speeds up reboots on rpi
    - name: swap - remove swapfile from /etc/fstab if it exist
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - none
        - swap

    - name: swap - disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

########################
## Modprobe / Systemd ##
########################

    - name: modprobe - enable modules
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      with_items:
        - br_netfilter
        - overlay

    - name: modprobe - load modules on boot
      lineinfile:
        path: /etc/modules
        line: "{{ item }}"
        state: present
      with_items:
        - br_netfilter
        - overlay

    - name: systemctl - allow ip forwarding
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: yes
        state: present
        reload: yes
        ignoreerrors: no
      with_dict: "{{ sysctl_config }}"
      vars:
        sysctl_config:
          net.ipv4.ip_forward: 1
          net.ipv4.conf.all.forwarding: 1
          net.ipv6.conf.all.forwarding: 1
          net.bridge.bridge-nf-call-iptables: 1
          net.bridge.bridge-nf-call-ip6tables: 1
          fs.inotify.max_user_watches: 524288
          fs.inotify.max_user_instances: 512

################
## Containerd ##
################

    - name: containerd - create default config
      shell: containerd config default>/etc/containerd/config.toml

    - name: containerd - enable systemd runc backend
      replace:
        path: /etc/containerd/config.toml
        regexp: "SystemdCgroup = false"
        replace: "SystemdCgroup = true"

    - name: containerd - restart and enable service
      service:
        name: containerd
        enabled: yes
        state: restarted

##############
## K8s Misc ##
##############

    - name: k8s - create directory for persistent hostPath "volumes"
      file:
        path: /var/lib/k8s/volumes
        state: directory

############
## Reboot ##
############

    - name: system - reboot (configuration)
      reboot:
