version: '3.5'

volumes:
  influxdb:
  config:

networks:
  web:
    external: true
  internal:

services:
  influxdb:
    container_name: scrutiny_db
    image: influxdb:2.2
    networks:
      - internal
    # ports:
    #   - '8086:8086'
    volumes:
      - influxdb:/var/lib/influxdb2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 10s
    restart: unless-stopped

  web:
    container_name: scrutiny_web
    image: ghcr.io/analogj/scrutiny:master-web
    networks:
      - internal
      - web
    volumes:
      - config:/opt/scrutiny/config
    environment:
      SCRUTINY_WEB_INFLUXDB_HOST: 'influxdb'
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 10s
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.${PROJECT}.entryPoints=https
      - traefik.http.routers.${PROJECT}.rule=Host(`${TRAEFIK_HOSTNAME}`)
      - traefik.http.routers.${PROJECT}.service=${PROJECT}
      - traefik.http.routers.${PROJECT}.tls.certresolver=letsEncrypt
      - traefik.http.services.${PROJECT}.loadbalancer.server.port=${TRAEFIK_PORT}
      - traefik.http.routers.${PROJECT}.middlewares=sso@file,security@file
    restart: unless-stopped

  collector:
    container_name: scrutiny_collector
    image: ghcr.io/analogj/scrutiny:master-collector
    networks:
      - internal
    volumes:
      - /run/udev:/run/udev:ro
    environment:
      COLLECTOR_API_ENDPOINT: 'http://web:8080'
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 10s
    cap_add:
      - SYS_RAWIO
    devices:
      - "/dev/sda:/dev/sda"
      - "/dev/sdb:/dev/sdb"
      - "/dev/sdc:/dev/sdc"
    restart: unless-stopped
