version: '3.5'

networks:
  web:
    external: true
  internal:

services:
  transmission:
    image: gists/transmission:latest
    container_name: transmission
    environment:
      - USERNAME=${TRANSMISSION_USER}
      - PASSWORD=${TRANSMISSION_PASS}
    volumes:
      - type: bind
        source: ${HOME}/.volumes/transmission/config/
        target: /data/.config
      - type: bind
        source: /media/HDD1/Anime
        target: /media/HDD1/Anime
      - type: bind
        source: /media/HDD1/Movies
        target: /media/HDD1/Movies
      - type: bind
        source: /media/HDD1/TV-Series
        target: /media/HDD1/TV-Series
      - type: bind
        source: /media/HDD1/K-Dramas
        target: /media/HDD1/K-Dramas
      - type: bind
        source: /media/HDD1/Downloads
        target: /media/HDD1/Downloads
      - type: bind
        source: ${HOME}/Storage/Downloads
        target: /media/SSD1/Downloads
    networks:
      - web
      - internal
    ports:
      - 54213:51413
      - 54213:51413/udp
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.transmission.entryPoints=https
      - traefik.http.routers.transmission.rule=Host(`down.${DOMAIN}`)
      - traefik.http.routers.transmission.service=transmission
      - traefik.http.routers.transmission.tls.certresolver=letsEncrypt
      - traefik.http.services.transmission.loadbalancer.server.port=9091
      - traefik.http.routers.transmission.middlewares=sso@file,security@file

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - type: bind
        source: ${HOME}/.volumes/radarr/config/
        target: /config
      - type: bind
        source: /media/HDD1/Anime
        target: /media/HDD1/Anime
      - type: bind
        source: /media/HDD1/Movies
        target: /media/HDD1/Movies
      - type: bind
        source: /media/HDD1/TV-Series
        target: /media/HDD1/TV-Series
      - type: bind
        source: /media/HDD1/K-Dramas
        target: /media/HDD1/K-Dramas
      - type: bind
        source: /media/HDD1/Downloads
        target: /media/HDD1/Downloads
      - type: bind
        source: ${HOME}/Storage/Downloads
        target: /media/SSD1/Downloads
    networks:
      - web
      - internal
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.routers.radarr.entryPoints=https
      - traefik.http.routers.radarr.tls.certresolver=letsEncrypt
      - traefik.http.routers.radarr.rule=Host(`movies.${DOMAIN}`)
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.middlewares=sso@file,security@file
    restart: unless-stopped

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - type: bind
        source: ${HOME}/.volumes/sonarr/config/
        target: /config
      - type: bind
        source: /media/HDD1/Anime
        target: /media/HDD1/Anime
      - type: bind
        source: /media/HDD1/Movies
        target: /media/HDD1/Movies
      - type: bind
        source: /media/HDD1/TV-Series
        target: /media/HDD1/TV-Series
      - type: bind
        source: /media/HDD1/K-Dramas
        target: /media/HDD1/K-Dramas
      - type: bind
        source: /media/HDD1/Downloads
        target: /media/HDD1/Downloads
      - type: bind
        source: ${HOME}/Storage/Downloads
        target: /media/SSD1/Downloads
    networks:
      - web
      - internal
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.sonarr.service=sonarr
      - traefik.http.routers.sonarr.entryPoints=https
      - traefik.http.routers.sonarr.tls.certresolver=letsEncrypt
      - traefik.http.routers.sonarr.rule=Host(`tvseries.${DOMAIN}`)
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.middlewares=sso@file,security@file
    restart: unless-stopped

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./config/jackett:/config
    networks:
      - web
      - internal
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.jackett.service=jackett
      - traefik.http.routers.jackett.entryPoints=https
      - traefik.http.routers.jackett.tls.certresolver=letsEncrypt
      - traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)
      - traefik.http.services.jackett.loadbalancer.server.port=9117
      - traefik.http.routers.jackett.middlewares=sso@file,security@file
    restart: unless-stopped
