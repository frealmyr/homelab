version: '3.5'

networks:
  web:
    external: true
  # internal:
  #   external: false
  # monitoring:
  #   external: true

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    dns:
      - 127.0.0.1
      - ${DNS1}
    ports:
      - ${ServerIP}:53:53/tcp
      - ${ServerIP}:53:53/udp
    networks:
      - web
      # - internal
    volumes:
      - ./config/data:/etc/pihole/
      - ./config/dnsmasqd:/etc/dnsmasq.d/
      - logs:/var/log/
    environment:
      # ServerIP: ${ServerIP}
      DNS1: ${DNS1}
      DNS2: ${DNS2}
      IPv6: ${IPv6}
      TZ: ${TZ}
      VIRTUAL_HOST: ${TRAEFIK_HOSTNAME}
      VIRTUAL_PORT: ${TRAEFIK_PORT}
      WEBPASSWORD: ${WEBPASSWORD}
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.${PROJECT}.entryPoints=https
      - traefik.http.routers.${PROJECT}.rule=Host(`${TRAEFIK_HOSTNAME}`)
      - traefik.http.routers.${PROJECT}.service=${PROJECT}
      - traefik.http.routers.${PROJECT}.tls.certresolver=letsEncrypt
      - traefik.http.services.${PROJECT}.loadbalancer.server.port=${TRAEFIK_PORT}
      - traefik.http.routers.${PROJECT}.middlewares=sso@file,security@file
    restart: unless-stopped

  # metrics:
  #   container_name: pihole_metrics
  #   image: ekofr/pihole-exporter:latest
  #   environment:
  #     PIHOLE_HOSTNAME: pihole
  #     PIHOLE_PASSWORD: ${WEBPASSWORD}
  #     INTERVAL: 300s
  #     PORT: 8082
  #   networks: 
  #    - internal
  #    - monitoring
  #   restart: unless-stopped

volumes:
  logs:
