version: '3.5'

networks:
  web:
    external: true

volumes:
  transcodes:

services:
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    user: 1000:1000
    group_add:
      - "109" # Group on host for allowing jellyfin access to hardware encoding/decoding
    volumes:
      - type: bind
        source: ${HOME}/.volumes/jellyfin/config/
        target: /config
      - type: bind
        source: /tmp
        target: /cache
      - type: volume
        source: transcodes
        target: /config/transcodes
      - type: bind
        source: /media/HDD1/Anime
        target: /media/HDD1/Anime
      - type: bind
        source: /media/HDD1/Movies
        target: /media/HDD1/Movies
      - type: bind
        source: /media/HDD1/TV-Series
        target: /media/HDD1/TV-Series
      - type: bind
        source: /media/HDD1/K-Dramas
        target: /media/HDD1/K-Dramas
      - type: bind
        source: /media/HDD2/Anime
        target: /media/HDD2/Anime
      - type: bind
        source: /media/HDD2/Movies
        target: /media/HDD2/Movies
      - type: bind
        source: /media/HDD2/TV-Series
        target: /media/HDD2/TV-Series
      - type: bind
        source: /media/HDD2/K-Dramas
        target: /media/HDD2/K-Dramas
    networks:
      - web
    devices:
      - /dev/dri/card0:/dev/dri/card0
      - /dev/dri/renderD128:/dev/dri/renderD128
    hostname: MediaLab
    labels:
      - autoheal=true
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.${PROJECT}.entryPoints=https
      - traefik.http.routers.${PROJECT}.rule=Host(`${TRAEFIK_HOSTNAME}`)
      - traefik.http.routers.${PROJECT}.service=${PROJECT}
      - traefik.http.routers.${PROJECT}.tls.certresolver=letsEncrypt
      - traefik.http.services.${PROJECT}.loadbalancer.server.port=${TRAEFIK_PORT}
      - traefik.http.routers.${PROJECT}.middlewares=security@file
    restart: unless-stopped
