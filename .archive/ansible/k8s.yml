---
- hosts: localhost
  become: true
  vars:
    node_ip: 10.0.0.4
    net_subnet: 10.244.0.0/16
    sysctl_config:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.forwarding: 1
      net.ipv6.conf.all.forwarding: 1

  tasks:
    - name: Allow all access from RFC1918 networks to this host
      community.general.ufw:
        rule: allow
        src: "{{ item }}"
      loop:
        - "{{ net_subnet }}"

    - name: update & upgrade apt packages
      apt:
        upgrade: full
        update_cache: yes
        cache_valid_time: 3600

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: enable overlay module
      community.general.modprobe:
        name: overlay
        state: present

    - name: enable br_netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present

    - name: change various sysctl-settings
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: yes
        state: present
        reload: yes
        ignoreerrors: no
      with_dict: "{{ sysctl_config }}"

    - name: Configure node ip
      lineinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
        state: absent

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --node-name k8s-master --pod-network-cidr={{ net_subnet }}

    - name: Setup kubeconfig for fredrick user
      command: "{{ item }}"
      with_items:
        - mkdir -p /home/fredrick/.kube
        - cp -i /etc/kubernetes/admin.conf /home/fredrick/.kube/config
        - chown fredrick:fredrick /home/fredrick/.kube/config

    - name: Untaint master node
      command: kubectl taint nodes k8s-master node-role.kubernetes.io/master:NoSchedule-
      become_user: fredrick

    - name: Install flannel as CNI network plugin
      command: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
      become_user: fredrick

    # - name: Create Terraform directory if it does not exist
    #   local_action: shell mkdir ../terraform/.terraform
    #   become_user: fredrick

    # - name: Copy kubeconfig to Terraform directory
    #   local_action: copy content={{ kubectl_copy.stdout }} dest=../terraform/.terraform/kubeconfig
    #   become_user: fredrick
